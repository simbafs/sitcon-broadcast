// Code generated by ent, DO NOT EDIT.

package session

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the session type in the database.
	Label = "session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldSpeakers holds the string denoting the speakers field in the database.
	FieldSpeakers = "speakers"
	// FieldRoom holds the string denoting the room field in the database.
	FieldRoom = "room"
	// FieldBroadcast holds the string denoting the broadcast field in the database.
	FieldBroadcast = "broadcast"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// FieldSlido holds the string denoting the slido field in the database.
	FieldSlido = "slido"
	// FieldSlide holds the string denoting the slide field in the database.
	FieldSlide = "slide"
	// FieldHackmd holds the string denoting the hackmd field in the database.
	FieldHackmd = "hackmd"
	// Table holds the table name of the session in the database.
	Table = "sessions"
)

// Columns holds all SQL columns for session fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldType,
	FieldSpeakers,
	FieldRoom,
	FieldBroadcast,
	FieldStart,
	FieldEnd,
	FieldSlido,
	FieldSlide,
	FieldHackmd,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType string
	// DefaultSpeakers holds the default value on creation for the "speakers" field.
	DefaultSpeakers []string
	// DefaultRoom holds the default value on creation for the "room" field.
	DefaultRoom string
	// DefaultBroadcast holds the default value on creation for the "broadcast" field.
	DefaultBroadcast []string
	// DefaultStart holds the default value on creation for the "start" field.
	DefaultStart time.Time
	// DefaultEnd holds the default value on creation for the "end" field.
	DefaultEnd time.Time
	// DefaultSlido holds the default value on creation for the "slido" field.
	DefaultSlido string
	// DefaultSlide holds the default value on creation for the "slide" field.
	DefaultSlide string
	// DefaultHackmd holds the default value on creation for the "hackmd" field.
	DefaultHackmd string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID string
)

// OrderOption defines the ordering options for the Session queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByRoom orders the results by the room field.
func ByRoom(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRoom, opts...).ToFunc()
}

// ByStart orders the results by the start field.
func ByStart(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStart, opts...).ToFunc()
}

// ByEnd orders the results by the end field.
func ByEnd(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnd, opts...).ToFunc()
}

// BySlido orders the results by the slido field.
func BySlido(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSlido, opts...).ToFunc()
}

// BySlide orders the results by the slide field.
func BySlide(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSlide, opts...).ToFunc()
}

// ByHackmd orders the results by the hackmd field.
func ByHackmd(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHackmd, opts...).ToFunc()
}
