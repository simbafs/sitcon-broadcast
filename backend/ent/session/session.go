// Code generated by ent, DO NOT EDIT.

package session

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the session type in the database.
	Label = "session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIdx holds the string denoting the idx field in the database.
	FieldIdx = "idx"
	// FieldFinish holds the string denoting the finish field in the database.
	FieldFinish = "finish"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// FieldRoom holds the string denoting the room field in the database.
	FieldRoom = "room"
	// FieldSessionID holds the string denoting the session_id field in the database.
	FieldSessionID = "session_id"
	// FieldNext holds the string denoting the next field in the database.
	FieldNext = "next"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// Table holds the table name of the session in the database.
	Table = "sessions"
)

// Columns holds all SQL columns for session fields.
var Columns = []string{
	FieldID,
	FieldIdx,
	FieldFinish,
	FieldStart,
	FieldEnd,
	FieldRoom,
	FieldSessionID,
	FieldNext,
	FieldTitle,
	FieldData,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultFinish holds the default value on creation for the "finish" field.
	DefaultFinish bool
)

// OrderOption defines the ordering options for the Session queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByIdx orders the results by the idx field.
func ByIdx(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIdx, opts...).ToFunc()
}

// ByFinish orders the results by the finish field.
func ByFinish(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFinish, opts...).ToFunc()
}

// ByStart orders the results by the start field.
func ByStart(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStart, opts...).ToFunc()
}

// ByEnd orders the results by the end field.
func ByEnd(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnd, opts...).ToFunc()
}

// ByRoom orders the results by the room field.
func ByRoom(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRoom, opts...).ToFunc()
}

// BySessionID orders the results by the session_id field.
func BySessionID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSessionID, opts...).ToFunc()
}

// ByNext orders the results by the next field.
func ByNext(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNext, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}
