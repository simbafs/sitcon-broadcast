// Code generated by ent, DO NOT EDIT.

package session

import (
	"backend/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldID, id))
}

// Start applies equality check predicate on the "start" field. It's identical to StartEQ.
func Start(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldStart, v))
}

// End applies equality check predicate on the "end" field. It's identical to EndEQ.
func End(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldEnd, v))
}

// SessionID applies equality check predicate on the "session_id" field. It's identical to SessionIDEQ.
func SessionID(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSessionID, v))
}

// Room applies equality check predicate on the "room" field. It's identical to RoomEQ.
func Room(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldRoom, v))
}

// Next applies equality check predicate on the "next" field. It's identical to NextEQ.
func Next(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldNext, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldTitle, v))
}

// Speaker applies equality check predicate on the "speaker" field. It's identical to SpeakerEQ.
func Speaker(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSpeaker, v))
}

// StartEQ applies the EQ predicate on the "start" field.
func StartEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldStart, v))
}

// StartNEQ applies the NEQ predicate on the "start" field.
func StartNEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldStart, v))
}

// StartIn applies the In predicate on the "start" field.
func StartIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldStart, vs...))
}

// StartNotIn applies the NotIn predicate on the "start" field.
func StartNotIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldStart, vs...))
}

// StartGT applies the GT predicate on the "start" field.
func StartGT(v int64) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldStart, v))
}

// StartGTE applies the GTE predicate on the "start" field.
func StartGTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldStart, v))
}

// StartLT applies the LT predicate on the "start" field.
func StartLT(v int64) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldStart, v))
}

// StartLTE applies the LTE predicate on the "start" field.
func StartLTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldStart, v))
}

// EndEQ applies the EQ predicate on the "end" field.
func EndEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldEnd, v))
}

// EndNEQ applies the NEQ predicate on the "end" field.
func EndNEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldEnd, v))
}

// EndIn applies the In predicate on the "end" field.
func EndIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldEnd, vs...))
}

// EndNotIn applies the NotIn predicate on the "end" field.
func EndNotIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldEnd, vs...))
}

// EndGT applies the GT predicate on the "end" field.
func EndGT(v int64) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldEnd, v))
}

// EndGTE applies the GTE predicate on the "end" field.
func EndGTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldEnd, v))
}

// EndLT applies the LT predicate on the "end" field.
func EndLT(v int64) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldEnd, v))
}

// EndLTE applies the LTE predicate on the "end" field.
func EndLTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldEnd, v))
}

// SessionIDEQ applies the EQ predicate on the "session_id" field.
func SessionIDEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSessionID, v))
}

// SessionIDNEQ applies the NEQ predicate on the "session_id" field.
func SessionIDNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldSessionID, v))
}

// SessionIDIn applies the In predicate on the "session_id" field.
func SessionIDIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldSessionID, vs...))
}

// SessionIDNotIn applies the NotIn predicate on the "session_id" field.
func SessionIDNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldSessionID, vs...))
}

// SessionIDGT applies the GT predicate on the "session_id" field.
func SessionIDGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldSessionID, v))
}

// SessionIDGTE applies the GTE predicate on the "session_id" field.
func SessionIDGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldSessionID, v))
}

// SessionIDLT applies the LT predicate on the "session_id" field.
func SessionIDLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldSessionID, v))
}

// SessionIDLTE applies the LTE predicate on the "session_id" field.
func SessionIDLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldSessionID, v))
}

// SessionIDContains applies the Contains predicate on the "session_id" field.
func SessionIDContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldSessionID, v))
}

// SessionIDHasPrefix applies the HasPrefix predicate on the "session_id" field.
func SessionIDHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldSessionID, v))
}

// SessionIDHasSuffix applies the HasSuffix predicate on the "session_id" field.
func SessionIDHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldSessionID, v))
}

// SessionIDEqualFold applies the EqualFold predicate on the "session_id" field.
func SessionIDEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldSessionID, v))
}

// SessionIDContainsFold applies the ContainsFold predicate on the "session_id" field.
func SessionIDContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldSessionID, v))
}

// RoomEQ applies the EQ predicate on the "room" field.
func RoomEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldRoom, v))
}

// RoomNEQ applies the NEQ predicate on the "room" field.
func RoomNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldRoom, v))
}

// RoomIn applies the In predicate on the "room" field.
func RoomIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldRoom, vs...))
}

// RoomNotIn applies the NotIn predicate on the "room" field.
func RoomNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldRoom, vs...))
}

// RoomGT applies the GT predicate on the "room" field.
func RoomGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldRoom, v))
}

// RoomGTE applies the GTE predicate on the "room" field.
func RoomGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldRoom, v))
}

// RoomLT applies the LT predicate on the "room" field.
func RoomLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldRoom, v))
}

// RoomLTE applies the LTE predicate on the "room" field.
func RoomLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldRoom, v))
}

// RoomContains applies the Contains predicate on the "room" field.
func RoomContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldRoom, v))
}

// RoomHasPrefix applies the HasPrefix predicate on the "room" field.
func RoomHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldRoom, v))
}

// RoomHasSuffix applies the HasSuffix predicate on the "room" field.
func RoomHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldRoom, v))
}

// RoomEqualFold applies the EqualFold predicate on the "room" field.
func RoomEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldRoom, v))
}

// RoomContainsFold applies the ContainsFold predicate on the "room" field.
func RoomContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldRoom, v))
}

// NextEQ applies the EQ predicate on the "next" field.
func NextEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldNext, v))
}

// NextNEQ applies the NEQ predicate on the "next" field.
func NextNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldNext, v))
}

// NextIn applies the In predicate on the "next" field.
func NextIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldNext, vs...))
}

// NextNotIn applies the NotIn predicate on the "next" field.
func NextNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldNext, vs...))
}

// NextGT applies the GT predicate on the "next" field.
func NextGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldNext, v))
}

// NextGTE applies the GTE predicate on the "next" field.
func NextGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldNext, v))
}

// NextLT applies the LT predicate on the "next" field.
func NextLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldNext, v))
}

// NextLTE applies the LTE predicate on the "next" field.
func NextLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldNext, v))
}

// NextContains applies the Contains predicate on the "next" field.
func NextContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldNext, v))
}

// NextHasPrefix applies the HasPrefix predicate on the "next" field.
func NextHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldNext, v))
}

// NextHasSuffix applies the HasSuffix predicate on the "next" field.
func NextHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldNext, v))
}

// NextEqualFold applies the EqualFold predicate on the "next" field.
func NextEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldNext, v))
}

// NextContainsFold applies the ContainsFold predicate on the "next" field.
func NextContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldNext, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldTitle, v))
}

// SpeakerEQ applies the EQ predicate on the "speaker" field.
func SpeakerEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSpeaker, v))
}

// SpeakerNEQ applies the NEQ predicate on the "speaker" field.
func SpeakerNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldSpeaker, v))
}

// SpeakerIn applies the In predicate on the "speaker" field.
func SpeakerIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldSpeaker, vs...))
}

// SpeakerNotIn applies the NotIn predicate on the "speaker" field.
func SpeakerNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldSpeaker, vs...))
}

// SpeakerGT applies the GT predicate on the "speaker" field.
func SpeakerGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldSpeaker, v))
}

// SpeakerGTE applies the GTE predicate on the "speaker" field.
func SpeakerGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldSpeaker, v))
}

// SpeakerLT applies the LT predicate on the "speaker" field.
func SpeakerLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldSpeaker, v))
}

// SpeakerLTE applies the LTE predicate on the "speaker" field.
func SpeakerLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldSpeaker, v))
}

// SpeakerContains applies the Contains predicate on the "speaker" field.
func SpeakerContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldSpeaker, v))
}

// SpeakerHasPrefix applies the HasPrefix predicate on the "speaker" field.
func SpeakerHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldSpeaker, v))
}

// SpeakerHasSuffix applies the HasSuffix predicate on the "speaker" field.
func SpeakerHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldSpeaker, v))
}

// SpeakerEqualFold applies the EqualFold predicate on the "speaker" field.
func SpeakerEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldSpeaker, v))
}

// SpeakerContainsFold applies the ContainsFold predicate on the "speaker" field.
func SpeakerContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldSpeaker, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Session) predicate.Session {
	return predicate.Session(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Session) predicate.Session {
	return predicate.Session(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Session) predicate.Session {
	return predicate.Session(sql.NotPredicates(p))
}
