// Code generated by ent, DO NOT EDIT.

package session

import (
	"backend/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldID, id))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldTitle, v))
}

// Room applies equality check predicate on the "room" field. It's identical to RoomEQ.
func Room(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldRoom, v))
}

// BroadcastFrom applies equality check predicate on the "broadcastFrom" field. It's identical to BroadcastFromEQ.
func BroadcastFrom(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldBroadcastFrom, v))
}

// Start applies equality check predicate on the "start" field. It's identical to StartEQ.
func Start(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldStart, v))
}

// End applies equality check predicate on the "end" field. It's identical to EndEQ.
func End(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldEnd, v))
}

// Speaker applies equality check predicate on the "speaker" field. It's identical to SpeakerEQ.
func Speaker(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSpeaker, v))
}

// Qa applies equality check predicate on the "qa" field. It's identical to QaEQ.
func Qa(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldQa, v))
}

// SlidoID applies equality check predicate on the "slidoID" field. It's identical to SlidoIDEQ.
func SlidoID(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSlidoID, v))
}

// SlidoAdminLink applies equality check predicate on the "slido_admin_link" field. It's identical to SlidoAdminLinkEQ.
func SlidoAdminLink(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSlidoAdminLink, v))
}

// CoWrite applies equality check predicate on the "co_write" field. It's identical to CoWriteEQ.
func CoWrite(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldCoWrite, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldTitle, v))
}

// RoomEQ applies the EQ predicate on the "room" field.
func RoomEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldRoom, v))
}

// RoomNEQ applies the NEQ predicate on the "room" field.
func RoomNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldRoom, v))
}

// RoomIn applies the In predicate on the "room" field.
func RoomIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldRoom, vs...))
}

// RoomNotIn applies the NotIn predicate on the "room" field.
func RoomNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldRoom, vs...))
}

// RoomGT applies the GT predicate on the "room" field.
func RoomGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldRoom, v))
}

// RoomGTE applies the GTE predicate on the "room" field.
func RoomGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldRoom, v))
}

// RoomLT applies the LT predicate on the "room" field.
func RoomLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldRoom, v))
}

// RoomLTE applies the LTE predicate on the "room" field.
func RoomLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldRoom, v))
}

// RoomContains applies the Contains predicate on the "room" field.
func RoomContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldRoom, v))
}

// RoomHasPrefix applies the HasPrefix predicate on the "room" field.
func RoomHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldRoom, v))
}

// RoomHasSuffix applies the HasSuffix predicate on the "room" field.
func RoomHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldRoom, v))
}

// RoomEqualFold applies the EqualFold predicate on the "room" field.
func RoomEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldRoom, v))
}

// RoomContainsFold applies the ContainsFold predicate on the "room" field.
func RoomContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldRoom, v))
}

// BroadcastFromEQ applies the EQ predicate on the "broadcastFrom" field.
func BroadcastFromEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldBroadcastFrom, v))
}

// BroadcastFromNEQ applies the NEQ predicate on the "broadcastFrom" field.
func BroadcastFromNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldBroadcastFrom, v))
}

// BroadcastFromIn applies the In predicate on the "broadcastFrom" field.
func BroadcastFromIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldBroadcastFrom, vs...))
}

// BroadcastFromNotIn applies the NotIn predicate on the "broadcastFrom" field.
func BroadcastFromNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldBroadcastFrom, vs...))
}

// BroadcastFromGT applies the GT predicate on the "broadcastFrom" field.
func BroadcastFromGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldBroadcastFrom, v))
}

// BroadcastFromGTE applies the GTE predicate on the "broadcastFrom" field.
func BroadcastFromGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldBroadcastFrom, v))
}

// BroadcastFromLT applies the LT predicate on the "broadcastFrom" field.
func BroadcastFromLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldBroadcastFrom, v))
}

// BroadcastFromLTE applies the LTE predicate on the "broadcastFrom" field.
func BroadcastFromLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldBroadcastFrom, v))
}

// BroadcastFromContains applies the Contains predicate on the "broadcastFrom" field.
func BroadcastFromContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldBroadcastFrom, v))
}

// BroadcastFromHasPrefix applies the HasPrefix predicate on the "broadcastFrom" field.
func BroadcastFromHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldBroadcastFrom, v))
}

// BroadcastFromHasSuffix applies the HasSuffix predicate on the "broadcastFrom" field.
func BroadcastFromHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldBroadcastFrom, v))
}

// BroadcastFromEqualFold applies the EqualFold predicate on the "broadcastFrom" field.
func BroadcastFromEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldBroadcastFrom, v))
}

// BroadcastFromContainsFold applies the ContainsFold predicate on the "broadcastFrom" field.
func BroadcastFromContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldBroadcastFrom, v))
}

// StartEQ applies the EQ predicate on the "start" field.
func StartEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldStart, v))
}

// StartNEQ applies the NEQ predicate on the "start" field.
func StartNEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldStart, v))
}

// StartIn applies the In predicate on the "start" field.
func StartIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldStart, vs...))
}

// StartNotIn applies the NotIn predicate on the "start" field.
func StartNotIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldStart, vs...))
}

// StartGT applies the GT predicate on the "start" field.
func StartGT(v int64) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldStart, v))
}

// StartGTE applies the GTE predicate on the "start" field.
func StartGTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldStart, v))
}

// StartLT applies the LT predicate on the "start" field.
func StartLT(v int64) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldStart, v))
}

// StartLTE applies the LTE predicate on the "start" field.
func StartLTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldStart, v))
}

// EndEQ applies the EQ predicate on the "end" field.
func EndEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldEnd, v))
}

// EndNEQ applies the NEQ predicate on the "end" field.
func EndNEQ(v int64) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldEnd, v))
}

// EndIn applies the In predicate on the "end" field.
func EndIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldEnd, vs...))
}

// EndNotIn applies the NotIn predicate on the "end" field.
func EndNotIn(vs ...int64) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldEnd, vs...))
}

// EndGT applies the GT predicate on the "end" field.
func EndGT(v int64) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldEnd, v))
}

// EndGTE applies the GTE predicate on the "end" field.
func EndGTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldEnd, v))
}

// EndLT applies the LT predicate on the "end" field.
func EndLT(v int64) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldEnd, v))
}

// EndLTE applies the LTE predicate on the "end" field.
func EndLTE(v int64) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldEnd, v))
}

// SpeakerEQ applies the EQ predicate on the "speaker" field.
func SpeakerEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSpeaker, v))
}

// SpeakerNEQ applies the NEQ predicate on the "speaker" field.
func SpeakerNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldSpeaker, v))
}

// SpeakerIn applies the In predicate on the "speaker" field.
func SpeakerIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldSpeaker, vs...))
}

// SpeakerNotIn applies the NotIn predicate on the "speaker" field.
func SpeakerNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldSpeaker, vs...))
}

// SpeakerGT applies the GT predicate on the "speaker" field.
func SpeakerGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldSpeaker, v))
}

// SpeakerGTE applies the GTE predicate on the "speaker" field.
func SpeakerGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldSpeaker, v))
}

// SpeakerLT applies the LT predicate on the "speaker" field.
func SpeakerLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldSpeaker, v))
}

// SpeakerLTE applies the LTE predicate on the "speaker" field.
func SpeakerLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldSpeaker, v))
}

// SpeakerContains applies the Contains predicate on the "speaker" field.
func SpeakerContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldSpeaker, v))
}

// SpeakerHasPrefix applies the HasPrefix predicate on the "speaker" field.
func SpeakerHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldSpeaker, v))
}

// SpeakerHasSuffix applies the HasSuffix predicate on the "speaker" field.
func SpeakerHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldSpeaker, v))
}

// SpeakerEqualFold applies the EqualFold predicate on the "speaker" field.
func SpeakerEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldSpeaker, v))
}

// SpeakerContainsFold applies the ContainsFold predicate on the "speaker" field.
func SpeakerContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldSpeaker, v))
}

// QaEQ applies the EQ predicate on the "qa" field.
func QaEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldQa, v))
}

// QaNEQ applies the NEQ predicate on the "qa" field.
func QaNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldQa, v))
}

// QaIn applies the In predicate on the "qa" field.
func QaIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldQa, vs...))
}

// QaNotIn applies the NotIn predicate on the "qa" field.
func QaNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldQa, vs...))
}

// QaGT applies the GT predicate on the "qa" field.
func QaGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldQa, v))
}

// QaGTE applies the GTE predicate on the "qa" field.
func QaGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldQa, v))
}

// QaLT applies the LT predicate on the "qa" field.
func QaLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldQa, v))
}

// QaLTE applies the LTE predicate on the "qa" field.
func QaLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldQa, v))
}

// QaContains applies the Contains predicate on the "qa" field.
func QaContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldQa, v))
}

// QaHasPrefix applies the HasPrefix predicate on the "qa" field.
func QaHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldQa, v))
}

// QaHasSuffix applies the HasSuffix predicate on the "qa" field.
func QaHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldQa, v))
}

// QaEqualFold applies the EqualFold predicate on the "qa" field.
func QaEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldQa, v))
}

// QaContainsFold applies the ContainsFold predicate on the "qa" field.
func QaContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldQa, v))
}

// SlidoIDEQ applies the EQ predicate on the "slidoID" field.
func SlidoIDEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSlidoID, v))
}

// SlidoIDNEQ applies the NEQ predicate on the "slidoID" field.
func SlidoIDNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldSlidoID, v))
}

// SlidoIDIn applies the In predicate on the "slidoID" field.
func SlidoIDIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldSlidoID, vs...))
}

// SlidoIDNotIn applies the NotIn predicate on the "slidoID" field.
func SlidoIDNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldSlidoID, vs...))
}

// SlidoIDGT applies the GT predicate on the "slidoID" field.
func SlidoIDGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldSlidoID, v))
}

// SlidoIDGTE applies the GTE predicate on the "slidoID" field.
func SlidoIDGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldSlidoID, v))
}

// SlidoIDLT applies the LT predicate on the "slidoID" field.
func SlidoIDLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldSlidoID, v))
}

// SlidoIDLTE applies the LTE predicate on the "slidoID" field.
func SlidoIDLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldSlidoID, v))
}

// SlidoIDContains applies the Contains predicate on the "slidoID" field.
func SlidoIDContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldSlidoID, v))
}

// SlidoIDHasPrefix applies the HasPrefix predicate on the "slidoID" field.
func SlidoIDHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldSlidoID, v))
}

// SlidoIDHasSuffix applies the HasSuffix predicate on the "slidoID" field.
func SlidoIDHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldSlidoID, v))
}

// SlidoIDEqualFold applies the EqualFold predicate on the "slidoID" field.
func SlidoIDEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldSlidoID, v))
}

// SlidoIDContainsFold applies the ContainsFold predicate on the "slidoID" field.
func SlidoIDContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldSlidoID, v))
}

// SlidoAdminLinkEQ applies the EQ predicate on the "slido_admin_link" field.
func SlidoAdminLinkEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkNEQ applies the NEQ predicate on the "slido_admin_link" field.
func SlidoAdminLinkNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkIn applies the In predicate on the "slido_admin_link" field.
func SlidoAdminLinkIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldSlidoAdminLink, vs...))
}

// SlidoAdminLinkNotIn applies the NotIn predicate on the "slido_admin_link" field.
func SlidoAdminLinkNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldSlidoAdminLink, vs...))
}

// SlidoAdminLinkGT applies the GT predicate on the "slido_admin_link" field.
func SlidoAdminLinkGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkGTE applies the GTE predicate on the "slido_admin_link" field.
func SlidoAdminLinkGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkLT applies the LT predicate on the "slido_admin_link" field.
func SlidoAdminLinkLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkLTE applies the LTE predicate on the "slido_admin_link" field.
func SlidoAdminLinkLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkContains applies the Contains predicate on the "slido_admin_link" field.
func SlidoAdminLinkContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkHasPrefix applies the HasPrefix predicate on the "slido_admin_link" field.
func SlidoAdminLinkHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkHasSuffix applies the HasSuffix predicate on the "slido_admin_link" field.
func SlidoAdminLinkHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkEqualFold applies the EqualFold predicate on the "slido_admin_link" field.
func SlidoAdminLinkEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldSlidoAdminLink, v))
}

// SlidoAdminLinkContainsFold applies the ContainsFold predicate on the "slido_admin_link" field.
func SlidoAdminLinkContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldSlidoAdminLink, v))
}

// CoWriteEQ applies the EQ predicate on the "co_write" field.
func CoWriteEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldEQ(FieldCoWrite, v))
}

// CoWriteNEQ applies the NEQ predicate on the "co_write" field.
func CoWriteNEQ(v string) predicate.Session {
	return predicate.Session(sql.FieldNEQ(FieldCoWrite, v))
}

// CoWriteIn applies the In predicate on the "co_write" field.
func CoWriteIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldIn(FieldCoWrite, vs...))
}

// CoWriteNotIn applies the NotIn predicate on the "co_write" field.
func CoWriteNotIn(vs ...string) predicate.Session {
	return predicate.Session(sql.FieldNotIn(FieldCoWrite, vs...))
}

// CoWriteGT applies the GT predicate on the "co_write" field.
func CoWriteGT(v string) predicate.Session {
	return predicate.Session(sql.FieldGT(FieldCoWrite, v))
}

// CoWriteGTE applies the GTE predicate on the "co_write" field.
func CoWriteGTE(v string) predicate.Session {
	return predicate.Session(sql.FieldGTE(FieldCoWrite, v))
}

// CoWriteLT applies the LT predicate on the "co_write" field.
func CoWriteLT(v string) predicate.Session {
	return predicate.Session(sql.FieldLT(FieldCoWrite, v))
}

// CoWriteLTE applies the LTE predicate on the "co_write" field.
func CoWriteLTE(v string) predicate.Session {
	return predicate.Session(sql.FieldLTE(FieldCoWrite, v))
}

// CoWriteContains applies the Contains predicate on the "co_write" field.
func CoWriteContains(v string) predicate.Session {
	return predicate.Session(sql.FieldContains(FieldCoWrite, v))
}

// CoWriteHasPrefix applies the HasPrefix predicate on the "co_write" field.
func CoWriteHasPrefix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasPrefix(FieldCoWrite, v))
}

// CoWriteHasSuffix applies the HasSuffix predicate on the "co_write" field.
func CoWriteHasSuffix(v string) predicate.Session {
	return predicate.Session(sql.FieldHasSuffix(FieldCoWrite, v))
}

// CoWriteEqualFold applies the EqualFold predicate on the "co_write" field.
func CoWriteEqualFold(v string) predicate.Session {
	return predicate.Session(sql.FieldEqualFold(FieldCoWrite, v))
}

// CoWriteContainsFold applies the ContainsFold predicate on the "co_write" field.
func CoWriteContainsFold(v string) predicate.Session {
	return predicate.Session(sql.FieldContainsFold(FieldCoWrite, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Session) predicate.Session {
	return predicate.Session(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Session) predicate.Session {
	return predicate.Session(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Session) predicate.Session {
	return predicate.Session(sql.NotPredicates(p))
}
